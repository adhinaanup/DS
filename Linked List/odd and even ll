#include <stdio.h>
#include <stdlib.h>

struct node 
{
    int data;
    struct node* next;
};

struct node *head = NULL, *head1 = NULL, *head2 = NULL;

int main() 
{
    int i, n;
    printf("Enter the number of nodes: ");
    scanf("%d", &n);

    // Create the linked list
    for (i = 0; i < n; i++) 
    {
        struct node *newnode = (struct node*)malloc(sizeof(struct node));
        printf("Enter the data for node %d: ", i + 1);
        scanf("%d", &newnode->data);
        newnode->next = NULL;

        if (head == NULL) {
            head = newnode;
        } else {
            struct node *temp = head;
            while (temp->next != NULL) {
                temp = temp->next;
            }
            temp->next = newnode;
        }
    }

    // Split the linked list into two based on even and odd numbers
    struct node *temp = head;
    while (temp != NULL) {
        struct node *temp1 = (struct node*)malloc(sizeof(struct node));
        temp1->data = temp->data;
        temp1->next = NULL;

        if (temp->data % 2 == 0)
        {
            if (head1 == NULL) 
            {
                head1 = temp1;
            } 
            else 
            {
                struct node *t1 = head1;
                while (t1->next != NULL) 
                {
                    t1 = t1->next;
                }
                t1->next = temp1;
            }
        } 
        else 
        {
            if (head2 == NULL) 
            {
                head2 = temp1;
            } 
            else 
            {
                struct node *t2 = head2;
                while (t2->next != NULL) 
                {
                    t2 = t2->next;
                }
                t2->next = temp1;
            }
        }
        temp = temp->next;
    }

    // Display the two lists
    printf("List with even numbers: ");
    struct node *temp1 = head1;
    while (temp1 != NULL) {
        printf("%d ", temp1->data);
        temp1 = temp1->next;
    }

    printf("\nList with odd numbers: ");
    struct node *temp2 = head2;
    while (temp2 != NULL) {
        printf("%d ", temp2->data);
        temp2 = temp2->next;
    }

    return 0;
}
