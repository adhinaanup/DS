#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node* next;
};
struct node *head,*temp,*newnode,*ptr;
void create(int n)
{
    for(int i=0;i<n;i++)
    {
        newnode=(struct node*)malloc(sizeof(struct node));
        printf("Enter the data :");
        scanf("%d",&newnode->data);
        if(head==NULL)
        {
            head=newnode;
            temp=newnode;
        }
        else
        {
            temp->next=newnode;
            temp=newnode;
        }
    }
}
void insert_at_beg()
{
    newnode=(struct node*)malloc(sizeof(struct node));
    printf("Enter data : ");
    scanf("%d",&newnode->data);
    temp=head;
    if(temp==NULL)
    {
        temp=newnode;
    }
    else
    {
        newnode->next=temp;
        head=newnode;
        
    }
}
void insert_at_end()
{
    newnode=(struct node*)malloc(sizeof(struct node));
    printf("Enter data : ");
    scanf("%d",&newnode->data);
    temp=head;
    while(temp->next!=NULL)
    {
        temp=temp->next;
    }
    newnode->next=NULL;
    temp->next=newnode;
    //temp=newnode;
}
void delete_at_beg()
{
    temp=head;
    head=temp->next;
    temp->next=NULL;
    free(temp);
}
void delete_at_end()
{
    temp=head;
    while(temp->next!=NULL)
    {
        ptr=temp;
        temp=temp->next;
    }
    ptr->next=NULL;
    free(temp);
}
void display()
{
    temp=head;
    printf("\nLinked List :\n");
    while(temp!=NULL)
    {
        printf("%d  ",temp->data);
        temp=temp->next;
    }
}
void main()
{
    int n,i,ch;
    printf("Enter the no of nodes : ");
    scanf("%d",&n);
    printf("\n1.Creation");
    printf("\n2.Insert at begining");
    printf("\n3.Insert at end");
    printf("\n4.Delete at begining");
    printf("\n5.Delete at end");
    printf("\n6.Display ");
    do
    {
        printf("\nEnter choice :");
        scanf("%d",&ch);
        switch(ch)
        {
            case 1 : create(n);break;
            case 2 : insert_at_beg();break;
            case 3 : insert_at_end();break;
            case 4 : delete_at_beg();break;
            case 5 : delete_at_end();break;
            case 6 : display();break;
        }
    }while(ch!=7);
}
