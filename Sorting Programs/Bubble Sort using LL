#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node *next;
};

struct node *head, *newnode, *temp;


void bubbleSort(struct node *start) {
    int swapped, tempData;
    struct node *ptr1;
    struct node *lptr = NULL;

    if (start == NULL)
        return;

    do {
        swapped = 0;
        ptr1 = start;

        while (ptr1->next != lptr) {
            if (ptr1->data > ptr1->next->data) {
                tempData = ptr1->data;
                ptr1->data = ptr1->next->data;
                ptr1->next->data = tempData;
                swapped = 1;
            }
            ptr1 = ptr1->next;
        }
        lptr = ptr1;
    } while (swapped);
}

int main() {
    int n;
    head = NULL;

    printf("Enter the number of nodes: ");
    scanf("%d", &n);

    for (int i = 0; i < n; i++) {
        newnode = (struct node *)malloc(sizeof(struct node));
        printf("Enter the data for node %d: ", i + 1);
        scanf("%d", &newnode->data);
        newnode->next = NULL;

        if (head == NULL) {
            head = newnode;
            temp = newnode;
        } else {
            temp->next = newnode;
            temp = newnode;
        }
    }

    printf("\nLinked List before sorting:\n");
    temp = head;
    while (temp != NULL) {
        printf("%d   ", temp->data);
        temp = temp->next;
    }

    bubbleSort(head); // Sorting the linked list

    printf("\n\nLinked List after sorting:\n");
    temp = head;
    while (temp != NULL) {
        printf("%d   ", temp->data);
        temp = temp->next;
    }

    return 0;
}
